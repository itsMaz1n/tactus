{"version":3,"file":"tactus.min.js","sources":["../../constants.ts","../../haptic.ts","../../utils.ts"],"sourcesContent":["export const HAPTIC_ID = \"___haptic-switch___\";\nexport const HAPTIC_DURATION_MS = 10;\n","import { HAPTIC_ID, HAPTIC_DURATION_MS } from \"./constants\";\nimport { isIOS as isIOSFunction } from \"./utils\";\n\nlet inputElement: HTMLInputElement | null = null;\nlet labelElement: HTMLLabelElement | null = null;\nlet isIOS = false;\n\n// must only be called once\nfunction mount() {\n    if (labelElement && inputElement) return;\n\n    isIOS = isIOSFunction();\n\n    inputElement = document.querySelector<HTMLInputElement>(`#${HAPTIC_ID}`);\n    labelElement = document.querySelector<HTMLLabelElement>(\n        `label[for=\"${HAPTIC_ID}\"]`\n    );\n\n    if (inputElement && labelElement) return;\n\n    inputElement = document.createElement(\"input\");\n    inputElement.type = \"checkbox\";\n    inputElement.id = HAPTIC_ID;\n    inputElement.setAttribute(\"switch\", \"\");\n    inputElement.style.display = \"none\";\n    document.body.appendChild(inputElement);\n\n    labelElement = document.createElement(\"label\");\n    labelElement.htmlFor = HAPTIC_ID;\n    labelElement.style.display = \"none\";\n    document.body.appendChild(labelElement);\n}\n\nif (typeof window !== \"undefined\") {\n    if (document.readyState === \"loading\") {\n        document.addEventListener(\"DOMContentLoaded\", mount, {\n            once: true,\n        });\n    } else {\n        mount();\n    }\n}\n\nexport function triggerHaptic(duration = HAPTIC_DURATION_MS) {\n    if (typeof window === \"undefined\") return;\n\n    if (isIOS) {\n        if (!inputElement || !labelElement) mount();\n        labelElement?.click();\n    } else {\n        if (navigator?.vibrate) navigator.vibrate(duration);\n        else labelElement?.click();\n    }\n}\n","export function isIOS(): boolean {\n    if (typeof navigator === \"undefined\" || typeof window === \"undefined\") {\n        return false;\n    }\n\n    const iOSDevice = /iPad|iPhone|iPod/.test(navigator.userAgent);\n\n    const iPadOS =\n        navigator.platform === \"MacIntel\" && navigator.maxTouchPoints > 1;\n\n    return iOSDevice || iPadOS;\n}\n"],"names":["HAPTIC_ID","inputElement","labelElement","isIOS","mount","navigator","window","iOSDevice","test","userAgent","iPadOS","platform","maxTouchPoints","isIOSFunction","document","querySelector","createElement","type","id","setAttribute","style","display","body","appendChild","htmlFor","readyState","addEventListener","once","duration","click","vibrate"],"mappings":"oCAAO,MAAMA,EAAY,sBCGzB,IAAIC,EAAwC,KACxCC,EAAwC,KACxCC,GAAQ,EAGZ,SAASC,IACDF,GAAgBD,IAEpBE,aCVA,GAAyB,oBAAdE,WAA+C,oBAAXC,OAC3C,OAAO,EAGX,MAAMC,EAAY,mBAAmBC,KAAKH,UAAUI,WAE9CC,EACqB,aAAvBL,UAAUM,UAA2BN,UAAUO,eAAiB,EAEpE,OAAOL,GAAaG,CACxB,CDAYG,GAERZ,EAAea,SAASC,cAAgC,IAAIf,KAC5DE,EAAeY,SAASC,cACpB,cAAcf,OAGdC,GAAgBC,IAEpBD,EAAea,SAASE,cAAc,SACtCf,EAAagB,KAAO,WACpBhB,EAAaiB,GAAKlB,EAClBC,EAAakB,aAAa,SAAU,IACpClB,EAAamB,MAAMC,QAAU,OAC7BP,SAASQ,KAAKC,YAAYtB,GAE1BC,EAAeY,SAASE,cAAc,SACtCd,EAAasB,QAAUxB,EACvBE,EAAakB,MAAMC,QAAU,OAC7BP,SAASQ,KAAKC,YAAYrB,IAC9B,OAEsB,oBAAXI,SACqB,YAAxBQ,SAASW,WACTX,SAASY,iBAAiB,mBAAoBtB,EAAO,CACjDuB,MAAM,IAGVvB,qBAIQ,SAAcwB,ED1CI,IC2CR,oBAAXtB,SAEPH,GACKF,GAAiBC,GAAcE,IACpCF,SAAAA,EAAc2B,UAEV,OAAAxB,gBAAA,IAAAA,eAAA,EAAAA,UAAWyB,SAASzB,UAAUyB,QAAQF,GACrC1B,SAAAA,EAAc2B,QAE3B"}